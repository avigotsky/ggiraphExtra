% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ggSpine.R
\name{ggSpine}
\alias{ggSpine}
\title{Draw an interactive spinogram}
\usage{
ggSpine(data, mapping, stat = "count", position = "fill",
  palette = "Blues", interactive = FALSE, polar = FALSE,
  reverse = FALSE, width = NULL, maxylev = 6, digits = 1,
  colour = "black", size = 0.2, addlabel = FALSE, labelsize = 5,
  hide.legend = TRUE, use.label = TRUE, use.labels = TRUE,
  xangle = NULL, yangle = NULL, ...)
}
\arguments{
\item{data}{A data.frame}

\item{mapping}{Set of aesthetic mappings created by aes or aes_.}

\item{stat}{The statistical transformation to use on the data for this layer, as a string
c("count","identity")}

\item{position}{Position adjustment. One of the c("fill","stack","dodge")}

\item{palette}{A character string indicating the color palette}

\item{interactive}{A logical value. If TRUE, an interactive plot will be returned}

\item{polar}{A logical value. If TRUE, coord_polar() function will be added}

\item{reverse}{If true, reverse palette colors}

\item{width}{Bar width}

\item{maxylev}{integer indicating threshold of unique value to be treated as a categorical variable}

\item{digits}{integer indicating the number of decimal places}

\item{colour}{Bar colour}

\item{size}{Bar size}

\item{addlabel}{A logical value. If TRUE, label will be added to the plot}

\item{labelsize}{label size}

\item{hide.legend}{A logical value. If TRUE, the legend is removed and y labels are recreated}

\item{use.label}{Logical. Whether or not use column label in case of labelled data}

\item{use.labels}{Logical. Whether or not use value labels in case of labelled data}

\item{xangle}{angle of axis label}

\item{yangle}{angle of axis label}

\item{...}{other arguments passed on to geom_rect_interactive.}
}
\value{
An interactive spinogram
}
\description{
Draw an interactive spinogram
}
\examples{
require(moonBook)
require(ggplot2)
require(ggiraph)
require(scales)
ggSpine(data=acs,aes(x=age,fill=sex))
ggSpine(data=acs,aes(x=sex,fill=Dx),addlabel=TRUE,interactive=TRUE)
ggSpine(data=acs,aes(x=Dx,fill=smoking),position="dodge",addlabel=TRUE,interactive=TRUE)
ggSpine(data=acs,aes(x=Dx,fill=smoking),position="stack",addlabel=TRUE,interactive=TRUE)
}
